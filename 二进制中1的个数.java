1、将一个整数减去1，对于其二进制表示来说，都是将最右边的1变成0，如果它的右边还有0，则所有的0都变成1，而它左边的所有位都保持不变
例如：最后1位是1的情况，1111减1变成1110，最后一位不是1的情况，1100减1，变成1011
2、整数减去1后再与原整数进行与运算，会把整数最右边的1变成0
例如：1100与1011得到1000，原本的第二位的1变成了0
3、一个整数的二进制表示中有多少个1，就能做多少次这样的操作。
public class Solution {
    public int NumberOf1(int n) {
        int res = 0;
        while(n != 0){
            res++;
            n = n & (n - 1);
        }
        return res;
    }
}
